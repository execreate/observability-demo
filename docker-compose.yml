name: observability-demo
services:

  app:
    depends_on:
      postgres_db_one:
        condition: service_healthy
      clickstack:
        condition: service_started
    build:
      context: ./one
    env_file:
      - ./one/.env
    ports:
      - "8091:8080"
    restart: on-failure
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1
      interval: 3s
      timeout: 3s
      retries: 10

  postgres_db_one:
    image: bitnami/postgresql:latest
    environment:
      POSTGRESQL_USERNAME: "user"
      POSTGRESQL_PASSWORD: "pass"
      POSTGRESQL_DATABASE: "my_db"
    ports:
      - "5441:5432"
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d my_db" ]
      interval: 3s
      timeout: 3s
      retries: 10

  mirror:
    depends_on:
      postgres_db_two:
        condition: service_healthy
      clickstack:
        condition: service_started
    build:
      context: ./two
    env_file:
      - ./two/.env
    ports:
      - "8092:8080"
    restart: on-failure
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1
      interval: 3s
      timeout: 3s
      retries: 10

  postgres_db_two:
    image: bitnami/postgresql:latest
    environment:
      POSTGRESQL_USERNAME: "user"
      POSTGRESQL_PASSWORD: "pass"
      POSTGRESQL_DATABASE: "my_db"
    ports:
      - "5442:5432"
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d my_db" ]
      interval: 3s
      timeout: 3s
      retries: 10

  clickstack:
    image: docker.hyperdx.io/hyperdx/hyperdx-all-in-one:latest
    restart: on-failure
    ports:
      - '8081:8080' # HyperDX UI
      - '4317:4317' # OTLP gRPC receiver
      - '4318:4318' # OTLP http receiver
